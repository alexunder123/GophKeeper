syntax = "proto3";

package grpc;

option go_package = "grpc/proto";

message newSessionIDRequest {
  string mock = 1; //заглушка
}

message newSessionIDResponce {
  string sessionID = 1; //новый SessionID
  bytes publicKeyBZ = 2; //открытый ключ для шифрования данных
}

message newUserRequest {
  string sessionID = 1; //SessionID пользователя
  bytes newUser = 2; //зашифрованные логин и пароль нового пользователя
  bytes publicKeyBZ = 3; //открытый ключ для шифрования данных
}

message newUserResponce {
  bytes userID = 1; //зашифрованный userID пользователя
  bytes symKey = 2; //зашифрованный симметричный ключ пользователя
}

message loginUserRequest {
  string sessionID = 1; //SessionID пользователя
  bytes loginUser = 2; //зашифрованные логин и пароль пользователя
  bytes publicKeyBZ = 3; //открытый ключ для шифрования данных
}

message loginUserResponce {
  bytes userID = 1; //зашифрованный userID пользователя
}

message userDataRequest {
  string sessionID = 1; //SessionID пользователя
}

message userDataResponce {
  bytes userData = 1; //зашифрованные данные пользователя
  string timeStamp = 2; //отметка времени последнего сохранения данных пользователя
  bytes symKey = 3; //зашифрованный симметричный ключ пользователя
}

message timeStampRequest {
  string sessionID = 1; //SessionID пользователя
}

message timeStampResponce {
  string timeStamp = 1; //отметка времени последнего сохранения данных пользователя
}

message updateDataRequest {
  string sessionID = 1; //SessionID пользователя
  string timeStamp = 2; //отметка времени последнего сохранения данных пользователя
  bytes userData = 3; //зашифрованные данные пользователя
}

message updateDataResponce {
  bool status = 1; //результат true - сохранено, false - ошибка, уточнение в error
  string timeStamp = 2; //отметка времени последнего сохранения данных пользователя
}

message logOutRequest {
  string sessionID = 1; //SessionID пользователя
}

message logOutResponce {
  bool status = 1; //результат true - пользователь разлогинен, false - ошибка, уточнение в error
}

service GophKeeper {
  rpc NewSessionID(newSessionIDRequest) returns (newSessionIDResponce);
  rpc NewUser(newUserRequest) returns (newUserResponce);
  rpc LoginUser(loginUserRequest) returns (loginUserResponce);
  rpc UserData(userDataRequest) returns (userDataResponce);
  rpc TimeStamp(timeStampRequest) returns (timeStampResponce);
  rpc UpdateData(updateDataRequest) returns (updateDataResponce);
  rpc LogOut(logOutRequest) returns (logOutResponce);
}
